# This file is generated by objective.metadata
#
# Last update: Tue Jun  5 22:24:48 2018

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
misc.update({'CLLocationCoordinate2D': objc.createStructType('CLLocationCoordinate2D', b'{_CLLocationCoordinate2D=dd}', ['latitude', 'longitude'])})
constants = '''$CLLocationDistanceMax@d$CLTimeIntervalMax@d$kCLDistanceFilterNone@d$kCLErrorDomain$kCLErrorUserInfoAlternateRegionKey$kCLHeadingFilterNone@d$kCLLocationAccuracyBest@d$kCLLocationAccuracyBestForNavigation@d$kCLLocationAccuracyHundredMeters@d$kCLLocationAccuracyKilometer@d$kCLLocationAccuracyNearestTenMeters@d$kCLLocationAccuracyThreeKilometers@d$kCLLocationCoordinate2DInvalid@{_CLLocationCoordinate2D=dd}$'''
enums = '''$CLActivityTypeAirborne@5$CLActivityTypeAutomotiveNavigation@2$CLActivityTypeFitness@3$CLActivityTypeOther@1$CLActivityTypeOtherNavigation@4$CLDeviceOrientationFaceDown@6$CLDeviceOrientationFaceUp@5$CLDeviceOrientationLandscapeLeft@3$CLDeviceOrientationLandscapeRight@4$CLDeviceOrientationPortrait@1$CLDeviceOrientationPortraitUpsideDown@2$CLDeviceOrientationUnknown@0$CLProximityFar@3$CLProximityImmediate@1$CLProximityNear@2$CLProximityUnknown@0$CLRegionStateInside@1$CLRegionStateOutside@2$CLRegionStateUnknown@0$kCLAuthorizationStatusAuthorized@3$kCLAuthorizationStatusAuthorizedAlways@3$kCLAuthorizationStatusDenied@2$kCLAuthorizationStatusNotDetermined@0$kCLAuthorizationStatusRestricted@1$kCLErrorDeferredAccuracyTooLow@13$kCLErrorDeferredCanceled@15$kCLErrorDeferredDistanceFiltered@14$kCLErrorDeferredFailed@11$kCLErrorDeferredNotUpdatingLocation@12$kCLErrorDenied@1$kCLErrorGeocodeFoundPartialResult@9$kCLErrorHeadingFailure@3$kCLErrorLocationUnknown@0$kCLErrorNetwork@2$kCLErrorRangingFailure@17$kCLErrorRangingUnavailable@16$kCLErrorRegionMonitoringDenied@4$kCLErrorRegionMonitoringFailure@5$kCLErrorRegionMonitoringResponseDelayed@7$kCLErrorRegionMonitoringSetupDelayed@6$'''
misc.update({})
functions={'CLLocationCoordinate2DIsValid': (b'Z{_CLLocationCoordinate2D=dd}',), 'CLLocationCoordinate2DMake': (b'{_CLLocationCoordinate2D=dd}dd',)}
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'CLBeaconRegion', b'notifyEntryStateOnDisplay', {'retval': {'type': b'Z'}})
    r(b'CLBeaconRegion', b'setNotifyEntryStateOnDisplay:', {'arguments': {2: {'type': b'Z'}}})
    r(b'CLCircularRegion', b'center', {'retval': {'type': b'{_CLLocationCoordinate2D=dd}'}})
    r(b'CLCircularRegion', b'containsCoordinate:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLCircularRegion', b'initWithCenter:radius:identifier:', {'arguments': {2: {'type': b'{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLGeocoder', b'geocodeAddressDictionary:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'geocodeAddressString:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'geocodeAddressString:inRegion:completionHandler:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'geocodeAddressString:inRegion:preferredLocale:completionHandler:', {'arguments': {5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'geocodePostalAddress:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'geocodePostalAddress:preferredLocale:completionHandler:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'isGeocoding', {'retval': {'type': b'Z'}})
    r(b'CLGeocoder', b'reverseGeocodeLocation:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLGeocoder', b'reverseGeocodeLocation:preferredLocale:completionHandler:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r(b'CLLocation', b'coordinate', {'retval': {'type': '{_CLLocationCoordinate2D=dd}'}})
    r(b'CLLocation', b'initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:', {'arguments': {2: {'type': b'{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLLocation', b'initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:', {'arguments': {2: {'type': '{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLLocationManager', b'deferredLocationUpdatesAvailable', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'headingAvailable', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'isMonitoringAvailableForClass:', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'isRangingAvailable', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'locationServicesEnabled', {'retval': {'type': 'Z'}})
    r(b'CLLocationManager', b'pausesLocationUpdatesAutomatically', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'regionMonitoringAvailable', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'regionMonitoringEnabled', {'retval': {'type': b'Z'}})
    r(b'CLLocationManager', b'setPausesLocationUpdatesAutomatically:', {'arguments': {2: {'type': b'Z'}}})
    r(b'CLLocationManager', b'significantLocationChangeMonitoringAvailable', {'retval': {'type': b'Z'}})
    r(b'CLRegion', b'center', {'retval': {'type': b'{_CLLocationCoordinate2D=dd}'}})
    r(b'CLRegion', b'containsCoordinate:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLRegion', b'initCircularRegionWithCenter:radius:identifier:', {'arguments': {2: {'type': b'{_CLLocationCoordinate2D=dd}'}}})
    r(b'CLRegion', b'notifyOnEntry', {'retval': {'type': b'Z'}})
    r(b'CLRegion', b'notifyOnExit', {'retval': {'type': b'Z'}})
    r(b'CLRegion', b'setNotifyOnEntry:', {'arguments': {2: {'type': b'Z'}}})
    r(b'CLRegion', b'setNotifyOnExit:', {'arguments': {2: {'type': b'Z'}}})
    r(b'NSObject', b'locationManager:didChangeAuthorizationStatus:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'i'}}})
    r(b'NSObject', b'locationManager:didDetermineState:forRegion:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}, 4: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didEnterRegion:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didExitRegion:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didFailWithError:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didFinishDeferredUpdatesWithError:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didStartMonitoringForRegion:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didUpdateHeading:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didUpdateLocations:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:didUpdateToLocation:fromLocation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r(b'NSObject', b'locationManager:monitoringDidFailForRegion:withError:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r(b'NSObject', b'locationManagerDidPauseLocationUpdates:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r(b'NSObject', b'locationManagerDidResumeLocationUpdates:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r(b'NSObject', b'locationManagerShouldDisplayHeadingCalibration:', {'required': False, 'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
