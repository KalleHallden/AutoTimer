# This file is generated by objective.metadata
#
# Last update: Sun Feb 10 11:03:03 2019

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$kDADiskDescriptionBusNameKey@^{__CFString=}$kDADiskDescriptionBusPathKey@^{__CFString=}$kDADiskDescriptionDeviceGUIDKey@^{__CFString=}$kDADiskDescriptionDeviceInternalKey@^{__CFString=}$kDADiskDescriptionDeviceModelKey@^{__CFString=}$kDADiskDescriptionDevicePathKey@^{__CFString=}$kDADiskDescriptionDeviceProtocolKey@^{__CFString=}$kDADiskDescriptionDeviceRevisionKey@^{__CFString=}$kDADiskDescriptionDeviceTDMLockedKey$kDADiskDescriptionDeviceUnitKey@^{__CFString=}$kDADiskDescriptionDeviceVendorKey@^{__CFString=}$kDADiskDescriptionMatchMediaUnformatted@^{__CFDictionary=}$kDADiskDescriptionMatchMediaWhole@^{__CFDictionary=}$kDADiskDescriptionMatchVolumeMountable@^{__CFDictionary=}$kDADiskDescriptionMatchVolumeUnrecognized@^{__CFDictionary=}$kDADiskDescriptionMediaBSDMajorKey@^{__CFString=}$kDADiskDescriptionMediaBSDMinorKey@^{__CFString=}$kDADiskDescriptionMediaBSDNameKey@^{__CFString=}$kDADiskDescriptionMediaBSDUnitKey@^{__CFString=}$kDADiskDescriptionMediaBlockSizeKey@^{__CFString=}$kDADiskDescriptionMediaContentKey@^{__CFString=}$kDADiskDescriptionMediaEjectableKey@^{__CFString=}$kDADiskDescriptionMediaEncryptedKey$kDADiskDescriptionMediaEncryptionDetailKey$kDADiskDescriptionMediaIconKey@^{__CFString=}$kDADiskDescriptionMediaKindKey@^{__CFString=}$kDADiskDescriptionMediaLeafKey@^{__CFString=}$kDADiskDescriptionMediaNameKey@^{__CFString=}$kDADiskDescriptionMediaPathKey@^{__CFString=}$kDADiskDescriptionMediaRemovableKey@^{__CFString=}$kDADiskDescriptionMediaSizeKey@^{__CFString=}$kDADiskDescriptionMediaTypeKey@^{__CFString=}$kDADiskDescriptionMediaUUIDKey@^{__CFString=}$kDADiskDescriptionMediaWholeKey@^{__CFString=}$kDADiskDescriptionMediaWritableKey@^{__CFString=}$kDADiskDescriptionVolumeKindKey@^{__CFString=}$kDADiskDescriptionVolumeMountableKey@^{__CFString=}$kDADiskDescriptionVolumeNameKey@^{__CFString=}$kDADiskDescriptionVolumeNetworkKey@^{__CFString=}$kDADiskDescriptionVolumePathKey@^{__CFString=}$kDADiskDescriptionVolumeUUIDKey@^{__CFString=}$kDADiskDescriptionWatchVolumeName@^{__CFArray=}$kDADiskDescriptionWatchVolumePath@^{__CFArray=}$'''
enums = '''$err_local_diskarbitration@14286848$kDADiskClaimOptionDefault@0$kDADiskEjectOptionDefault@0$kDADiskMountOptionDefault@0$kDADiskMountOptionWhole@1$kDADiskOptionDefault@0$kDADiskOptionEjectUponLogout@1$kDADiskOptionMountAutomatic@16$kDADiskOptionMountAutomaticNoDefer@32$kDADiskOptionPrivate@256$kDADiskRenameOptionDefault@0$kDADiskUnmountOptionDefault@0$kDADiskUnmountOptionForce@524288$kDADiskUnmountOptionWhole@1$kDAReturnBadArgument@4175036419$kDAReturnBusy@4175036418$kDAReturnError@4175036417$kDAReturnExclusiveAccess@4175036420$kDAReturnNoResources@4175036421$kDAReturnNotFound@4175036422$kDAReturnNotMounted@4175036423$kDAReturnNotPermitted@4175036424$kDAReturnNotPrivileged@4175036425$kDAReturnNotReady@4175036426$kDAReturnNotWritable@4175036427$kDAReturnSuccess@0$kDAReturnUnsupported@4175036428$'''
misc.update({})
functions={'DASessionGetTypeID': (sel32or64(b'L', b'Q'),), 'DADiskClaim': (sel32or64(b'v^{__DADisk=}L^?^v^?^v', b'v^{__DADisk=}I^?^v^?^v'), '', {'arguments': {2: {'callable': {'retval': {'type': b'^{__DADissenter=}'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}}}), 'DARegisterDiskDescriptionChangedCallback': (b'v^{__DASession=}^{__CFDictionary=}^{__CFArray=}^?^v', '', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__CFArray=}'}, 2: {'type': b'^v'}}}}}}), 'DADiskCreateFromBSDName': (b'^{__DADisk=}^{__CFAllocator=}^{__DASession=}^t', '', {'retval': {'already_cfretained': True}, 'arguments': {2: {'c_array_delimited_by_null': True, 'type_modifier': 'n'}}}), 'DAApprovalSessionCreate': (b'^{__DASession=}^{__CFAllocator=}', '', {'retval': {'already_cfretained': True}}), 'DADiskGetBSDName': (b'^t^{__DADisk=}', '', {'retval': {'c_array_delimited_by_null': True}}), 'DARegisterDiskDisappearedCallback': (b'v^{__DASession=}^{__CFDictionary=}^?^v', '', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DASessionCreate': (b'^{__DASession=}^{__CFAllocator=}', '', {'retval': {'already_cfretained': True}}), 'DARegisterDiskAppearedCallback': (b'v^{__DASession=}^{__CFDictionary=}^?^v', '', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DASessionUnscheduleFromRunLoop': (b'v^{__DASession=}^{__CFRunLoop=}^{__CFString=}',), 'DADiskGetTypeID': (sel32or64(b'L', b'Q'),), 'DADiskCopyIOMedia': (b'I^{__DADisk=}', '', {'retval': {'already_cfretained': True}}), 'DADissenterCreate': (b'^{__DADissenter=}^{__CFAllocator=}i^{__CFString=}', '', {'retval': {'already_cfretained': True}}), 'DADiskCreateFromIOMedia': (b'^{__DADisk=}^{__CFAllocator=}^{__DASession=}I', '', {'retval': {'already_cfretained': True}}), 'DASessionScheduleWithRunLoop': (b'v^{__DASession=}^{__CFRunLoop=}^{__CFString=}',), 'DAUnregisterCallback': (b'v^{__DASession=}^v^v',), 'DADissenterGetStatusString': (b'^{__CFString=}^{__DADissenter=}',), 'DADiskSetOptions': (sel32or64(b'i^{__DADisk=}LZ', b'i^{__DADisk=}IZ'),), 'DAApprovalSessionUnscheduleFromRunLoop': (b'v^{__DASession=}^{__CFRunLoop=}^{__CFString=}',), 'DASessionSetDispatchQueue': (b'v^{__DASession=}^{dispatch_queue_s=}',), 'DADiskCreateFromVolumePath': (b'^{__DADisk=}^{__CFAllocator=}^{__DASession=}^{__CFURL=}', '', {'retval': {'already_cfretained': True}}), 'DADiskCopyDescription': (b'^{__CFDictionary=}^{__DADisk=}', '', {'retval': {'already_cfretained': True}}), 'DADiskIsClaimed': (b'Z^{__DADisk=}',), 'DADiskGetOptions': (sel32or64(b'L^{__DADisk=}', b'I^{__DADisk=}'),), 'DADiskMountWithArguments': (sel32or64(b'v^{__DADisk=}^{__CFURL=}L^?^v^^{__CFString=}', b'v^{__DADisk=}^{__CFURL=}I^?^v^^{__CFString=}'), '', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}, 4: {'c_array_delimited_by_null': True, 'type_modifier': 'n'}}}), 'DAApprovalSessionScheduleWithRunLoop': (b'v^{__DASession=}^{__CFRunLoop=}^{__CFString=}',), 'DAApprovalSessionGetTypeID': (sel32or64(b'L', b'Q'),), 'DADiskRename': (sel32or64(b'v^{__DADisk=}^{__CFString=}L^?^v', b'v^{__DADisk=}^{__CFString=}I^?^v'), '', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}}}), 'DADissenterGetStatus': (b'i^{__DADissenter=}',), 'DARegisterDiskPeekCallback': (sel32or64(b'v^{__DASession=}^{__CFDictionary=}l^?^v', b'v^{__DASession=}^{__CFDictionary=}q^?^v'), '', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DADiskUnclaim': (b'v^{__DADisk=}',), 'DADiskEject': (sel32or64(b'v^{__DADisk=}L^?^v', b'v^{__DADisk=}I^?^v'), '', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}}}), 'DARegisterDiskMountApprovalCallback': (b'v^{__DASession=}^{__CFDictionary=}^?^v', '', {'arguments': {2: {'callable': {'retval': {'type': b'^{__DADissenter=}'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DAUnregisterApprovalCallback': (b'v^{__DASession=}^v^v',), 'DARegisterDiskEjectApprovalCallback': (b'v^{__DASession=}^{__CFDictionary=}^?^v', '', {'arguments': {2: {'callable': {'retval': {'type': b'^{__DADissenter=}'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DARegisterDiskUnmountApprovalCallback': (b'v^{__DASession=}^{__CFDictionary=}^?^v', '', {'arguments': {2: {'callable': {'retval': {'type': b'^{__DADissenter=}'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^v'}}}}}}), 'DADiskCopyWholeDisk': (b'^{__DADisk=}^{__DADisk=}', '', {'retval': {'already_cfretained': True}}), 'DADiskUnmount': (sel32or64(b'v^{__DADisk=}L^?^v', b'v^{__DADisk=}I^?^v'), '', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}}}), 'DADiskMount': (sel32or64(b'v^{__DADisk=}^{__CFURL=}L^?^v', b'v^{__DADisk=}^{__CFURL=}I^?^v'), '', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^{__DADisk=}'}, 1: {'type': b'^{__DADissenter=}'}, 2: {'type': b'^v'}}}}}})}
cftypes=[('DAApprovalSessionRef', b'^{__DASession=}', 'DAApprovalSessionGetTypeID', None), ('DADiskRef', b'^{__DADisk=}', 'DADiskGetTypeID', None), ('DADissenterRef', b'^{__DADissenter=}', 'DADissenterGetTypeID', None), ('DASessionRef', b'^{__DASession=}', 'DASessionGetTypeID', None)]
expressions = {}

# END OF FILE
